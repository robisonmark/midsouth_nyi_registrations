name: Build and Publish

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main, develop ]

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_NAME: 'RoBrosBaseDomainService'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore -c Release
    
    - name: Test
      run: dotnet test --no-build -c Release --verbosity normal
    
    - name: Pack
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        dotnet pack -c Release -o ./nupkgs /p:Version=$VERSION
    
    - name: Upload NuGet Package
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: ./nupkgs/*.nupkg

  publish-nuget:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: nuget-package
        path: ./nupkgs
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Publish to NuGet
      run: |
        dotnet nuget push ./nupkgs/*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/robros-journal-service:${{ steps.version.outputs.VERSION }}
          ${{ secrets.DOCKER_USERNAME }}/robros-journal-service:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/robros-journal-service:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/robros-journal-service:buildcache,mode=max