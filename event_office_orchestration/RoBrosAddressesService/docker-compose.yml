services:
  # addressservice-sample:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ConnectionStrings__DefaultConnection=Host=localhost;Database=YourDatabaseName;Username=postgres;Password=YourPassword
  #     - ASPNETCORE_HTTP_PORTS=8080
  #   depends_on:
  #     - db
  #   networks:
  #     - addressservice-network

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: RoBrosAddresses
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: YourPassword
    ports:
      - "5432:5432"
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d RoBrosAddresses"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Not sure if I am going to do this yet 
  # postgres_test:
  #   image: postgres:15
  #   environment:
  #     POSTGRES_DB: addresstest
  #     POSTGRES_USER: testuser
  #     POSTGRES_PASSWORD: testpass
  #   ports:
  #     - "5433:5432"
  #   volumes:
  #     - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U testuser -d addresstest"]
  #     interval: 5s
  #     timeout: 3s
  #     retries: 3

  # Example consumer service for testing Not Sure If I am going to do this
  consumer-api:
    build:
      context: .
      dockerfile: samples/ConsumerApi/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Host=localhost;Database=YourDatabaseName;Username=postgres;Password=YourPassword
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - addressservice-network

volumes:
  pgdata:

networks:
  addressservice-network:
    driver: bridge
